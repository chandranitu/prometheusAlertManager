# values_minikube.yaml
# Tested with stable/prometheus-operator v4.3.6
# https://medium.com/@eduardobaitello/trying-prometheus-operator-with-helm-minikube-b617a2dccfa3
coreDns:
  service:
    selector:
      k8s-app: kube-dns

kubeControllerManager:
  service:
    selector:
      k8s-app: kube-dns
      component: kube-controller-manager

kubeEtcd:
  service:
    selector:
      k8s-app: kube-dns
      component: etcd

kubeScheduler:
  service:
    selector:
      k8s-app: kube-dns
      component: kube-scheduler


## Configuration for alertmanager
alerting:
alertmanager:
  config:
    global:
      resolve_timeout: 1m
    route:
      group_by: ['alertname', 'cluster', 'service','job']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 12h
      # A default receiver
      receiver: emailer
      routes:
        - match:
            alertname: TargetDown
          receiver: emailer
        - match:
            alertname: Watchdog
          receiver: emailer
        - match:
            alertname: DeadMansSwitch
          receiver: emailer
        - match:
            alertname: springdown
          receiver: emailer
        
    receivers:
      - name: emailer
        email_configs:
          - to: cnsnoida@gmail.com
            from:  chandranitu@gmail.com
            smarthost: smtp.gmail.com:587
            auth_username: chandranitu@gmail.com
            auth_identity: chandranitu@gmail.com
            auth_password: psqmwxxzimdzlnfe

# Load and evaluate rules in this file every 'evaluation_interval' seconds.
#rule_files:
  #  - "~/k8s/alert_rules.yml"
  # - "first.rules"
  # - "second.rules"

groups:
- name: spring-micrometer-prometheus
  rules:
  - alert: springdown
    expr: http_server_requests_seconds{application="spring-micrometer-demo",uri="/api/test",status="200"} >= 0
    for: 10s
    labels:
      severity: critical
      k8s-component: 
    annotations:
      description: spring member {{ $labels.instance }} has no leader
      summary: spring down



scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'spring-micrometer-prometheus'
# metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.
    static_configs:
    - targets: ['localhost:8080']
